#!/usr/bin/python3.8
# -*- coding: utf-8 -*-
import logging
from datetime import time
import subprocess
import urllib3

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
from telebot import types
from status_code import *

list_domains = ""

bot = telebot.TeleBot(token_tg_bot)


@bot.message_handler(commands=['start'])
def get_text_messages(message):
    print(message.from_user.id)
    print(message.text)
    db = MySQLi(host, user, password, database_home)
    domain_list = db.fetch("SELECT domains.domain, users.id_user "
                           "FROM domains, users WHERE domains.id_domain = users.domain_id "
                           "AND users.telegram_id = %s ", message.from_user.id)
    start_menu = types.ReplyKeyboardMarkup(True, True)
    start_menu.row('‚úÖÔ∏è–î–æ–±–∞–≤–∏—Ç—å —Å–∞–π—Ç', '‚ùå –£–¥–∞–ª–∏—Ç—å —Å–∞–π—Ç')
    if len(domain_list['rows']) >= 1:
        start_menu.row('‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–º–µ–Ω–µ')
    # start_menu.row('üìàÔ∏è –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å HASH robots', 'üëÄ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    # start_menu.row('üìà –ü–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏ –ø—Ä–æ–≤–µ—Ä–æ–∫')
    bot.send_message(message.chat.id, '–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é', reply_markup=start_menu)


@bot.message_handler(content_types=['text'])
def handle_text(message):
    user_id = message.chat.id
    if message.text == '‚úÖÔ∏è–î–æ–±–∞–≤–∏—Ç—å —Å–∞–π—Ç':
        back_button = types.ReplyKeyboardMarkup(True, True)
        back_button.row('–ù–∞–∑–∞–¥')
        print(message.chat.id)
        print(message.text)
        bot.send_message(message.chat.id,
                         f"üì® –ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∞–¥—Ä–µ—Å –¥–æ–º–µ–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å. –ü—Ä–∏–º–µ—Ä—ã:\n"
                         f"https://site.ru\n"
                         f"http://site.ru\n"
                         f"https://www.site.ru",
                         reply_markup=back_button, parse_mode="HTML")
        bot.register_next_step_handler(message, add_site_bd)

    elif message.text == '‚ùå –£–¥–∞–ª–∏—Ç—å —Å–∞–π—Ç':
        back_button = types.ReplyKeyboardMarkup(True, True)
        back_button.row('–ù–∞–∑–∞–¥')
        db = MySQLi(host, user, password, database_home)
        domain_list = db.fetch("SELECT domains.domain, users.id_user "
                               "FROM domains, users WHERE domains.id_domain = users.domain_id "
                               "AND users.telegram_id = %s ", user_id)
        print(domain_list)
        print(len(domain_list))
        if len(domain_list['rows']) >= 1:
            list_domain = []
            for i in domain_list['rows']:
                domain = i[0]
                id_for_list = i[1]
                list_domain.append(f"{domain}: ID - {id_for_list}")
            domains_str = ''
            for i in list_domain:
                domains_str += i + '\n'
            bot.send_message(message.chat.id, text=
            f"–î–ª—è <b>—É–¥–∞–ª–µ–Ω–∏—è</b> —Å–∞–π—Ç–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è —É–∫–∞–∑–∞—Ç—å –µ–≥–æ <b>ID</b> –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –Ω–∏–∂–µ —Å–ø–∏—Å–∫–∞.\n"
            f"üëá–í–∞—à —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –¥–æ–º–µ–Ω–æ–≤:üëá\n"
            f"{domains_str}\n"
            f"<b>–£–ö–ê–ñ–ò–¢–ï ID</b> –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è", parse_mode="HTML",
                             reply_markup=back_button)
            bot.register_next_step_handler(message, delete_site_bd)
        else:
            bot.send_message(message.chat.id, f"–í–∞—à —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –¥–æ–º–µ–Ω–æ–≤ –ø—É—Å—Ç üòü\n"
                                              f"–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ /start –∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –¥–æ–º–µ–Ω.")

    elif message.text == '‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–º–µ–Ω–µ':
        back_button = types.ReplyKeyboardMarkup(True, True)
        back_button.row('–ù–∞–∑–∞–¥')
        print(message.chat.id)
        print(message.text)
        db = MySQLi(host, user, password, database_home)
        domain_list = db.fetch("SELECT domains.domain, users.id_user "
                               "FROM domains, users WHERE domains.id_domain = users.domain_id "
                               "AND users.telegram_id = %s ", user_id)

        if len(domain_list['rows']) >= 1:
            list_domain = []
            for i in domain_list['rows']:
                domain = i[0]
                id_for_list = i[1]
                list_domain.append(f"{domain}: ID - {id_for_list}")
            domains_str = ''
            for i in list_domain:
                domains_str += i + '\n'
            bot.send_message(message.chat.id, f"–í–∞—à —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –¥–æ–º–µ–Ω–æ–≤:\n{domains_str}"
                                              f"\n–£–∫–∞–∂–∏—Ç–µ ID –¥–æ–º–µ–Ω–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.",
                             reply_markup=back_button)
            bot.register_next_step_handler(message, information_domain)
        else:
            bot.send_message(message.chat.id, f"–í–∞—à —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –¥–æ–º–µ–Ω–æ–≤ –ø—É—Å—Ç üòü\n"
                                              f"–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ /start –∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –¥–æ–º–µ–Ω.")


    elif message.text == '–ù–∞–∑–∞–¥':
        print(message.text)
        get_text_messages(message)


def information_domain(message):
    try:
        if message.text == '–ù–∞–∑–∞–¥':
            get_text_messages(message)
        else:
            domain_id = message.text
            user_id = message.from_user.id
            db = MySQLi(host, user, password, database_home)
            check_domain_information = db.fetch("SELECT domain_id FROM users WHERE telegram_id = %s AND id_user = %s",
                                                user_id,
                                                domain_id)
            if len(check_domain_information['rows']) >= 1:
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ–º–µ–Ω–µ {domain_id} –∏–∑ –ë–î")

                db_domain_url = db.fetch("SELECT domains.domain FROM domains INNER JOIN users ON users.domain_id = "
                                         "domains.id_domain WHERE users.id_user = %s AND users.telegram_id = %s",
                                         domain_id, user_id)
                domain_url = db_domain_url['rows'][0][0]
                db_date_expired_domain = db.fetch("select expired_date_domains.date_time FROM domains INNER JOIN "
                                                  "expired_date_domains ON domains.id_domain = "
                                                  "expired_date_domains.id_domain INNER JOIN users ON "
                                                  "domains.id_domain = users.domain_id WHERE users.telegram_id = "
                                                  "%s AND users.id_user = %s", user_id, domain_id)
                date_expired = db_date_expired_domain['rows'][0][0]
                db_ua_standard = db.fetch("SELECT statistic_domains_check.response_code FROM statistic_domains_check "
                                          "INNER JOIN domains ON domains.id_domain = "
                                          "statistic_domains_check.id_domain INNER JOIN users ON domains.id_domain = "
                                          "users.domain_id WHERE users.telegram_id = %s AND users.id_user = "
                                          "%s AND UA = 'Standard' ORDER BY (datetime) desc LIMIT 1", user_id, domain_id)
                code_ua_standard = db_ua_standard['rows'][0][0]
                db_ua_yandex_mob = db.fetch("SELECT statistic_domains_check.response_code FROM statistic_domains_check "
                                            "INNER JOIN domains ON domains.id_domain = "
                                            "statistic_domains_check.id_domain INNER JOIN users ON domains.id_domain = "
                                            "users.domain_id WHERE users.telegram_id = %s AND users.id_user = "
                                            "%s AND UA = 'Yandex_MOB' ORDER BY (datetime) desc LIMIT 1", user_id,
                                            domain_id)
                code_ua_yandex_mob = db_ua_yandex_mob['rows'][0][0]
                db_ua_yandex_pc = db.fetch("SELECT statistic_domains_check.response_code FROM statistic_domains_check "
                                           "INNER JOIN domains ON domains.id_domain = "
                                           "statistic_domains_check.id_domain INNER JOIN users ON domains.id_domain = "
                                           "users.domain_id WHERE users.telegram_id = %s AND users.id_user = "
                                           "%s AND UA = 'Yandex_PC' ORDER BY (datetime) desc LIMIT 1", user_id,
                                           domain_id)
                code_ua_yandex_pc = db_ua_yandex_pc['rows'][0][0]
                db_ua_ggl = db.fetch("SELECT statistic_domains_check.response_code FROM statistic_domains_check "
                                     "INNER JOIN domains ON domains.id_domain = "
                                     "statistic_domains_check.id_domain INNER JOIN users ON domains.id_domain = "
                                     "users.domain_id WHERE users.telegram_id = %s AND users.id_user = "
                                     "%s AND UA = 'Google' ORDER BY (datetime) desc LIMIT 1", user_id,
                                     domain_id)
                code_ua_ggl = db_ua_ggl['rows'][0][0]
                db_ua_date = db.fetch("SELECT statistic_domains_check.datetime FROM statistic_domains_check "
                                      "INNER JOIN domains ON domains.id_domain = "
                                      "statistic_domains_check.id_domain INNER JOIN users ON domains.id_domain = "
                                      "users.domain_id WHERE users.telegram_id = %s AND users.id_user = "
                                      "%s AND UA = 'Google' ORDER BY (datetime) desc LIMIT 1", user_id,
                                      domain_id)
                code_date = db_ua_date['rows'][0][0]
                db_date_check_robots = db.fetch("SELECT robots_txt.datetime FROM robots_txt INNER JOIN domains ON "
                                                "domains.id_domain = robots_txt.id_domain INNER JOIN users ON "
                                                "domains.id_domain = users.domain_id WHERE users.telegram_id = %s AND "
                                                "users.id_user = "
                                                "%s ORDER BY (datetime) desc LIMIT 1", user_id, domain_id)
                date_check_robots = db_date_check_robots['rows'][0][0]
                # db_count_domains_users = db.fetch("SELECT count(domain_id) from USERS where id_user = %s", domain_id)
                db_count_domains_users = db.fetch("SELECT count(domain_id) FROM users where domain_id = (SELECT domain_id FROM users WHERE id_user = %s)", domain_id)
                count_domains_users = db_count_domains_users['rows'][0][0]
                string_message = f"üåê–î–æ–º–µ–Ω: {domain_url}\n" \
                                 f"‚ú®Status Code UA Standard: {code_ua_standard}\n" \
                                 f"‚ú®Status Code UA Yandex Mobile: {code_ua_yandex_mob}\n" \
                                 f"‚ú®Status Code UA Google Mobile: {code_ua_ggl}\n" \
                                 f"‚ú®Status Code UA Yandex PC: {code_ua_yandex_pc}\n" \
                                 f"üìÖ–î–∞—Ç–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è: {date_expired}\n" \
                                 f"üìÖ–î–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–¥–∞ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞: {code_date}\n" \
                                 f"üìÖ–î–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ robots_txt: {date_check_robots}\n" \
                                 f"üë•–ö–æ–ª-–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–ª–µ–¥–∏—Ç –∑–∞ –¥–æ–º–µ–Ω–æ–º, —à—Ç.: {count_domains_users}\n"
                bot.send_message(message.from_user.id, string_message)

            else:
                bot.send_message(message.from_user.id, f"–£–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π id. –ù–∞–ø–∏—à–∏—Ç–µ /start –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É.")
    except IndexError:
        bot.send_message(message.from_user.id, f"‚ö†–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–º–µ–Ω–µ.\n–¢—Ä–µ–±—É–µ—Ç—Å—è 24 —á–∞—Å–∞ –¥–ª—è —Å–±–æ—Ä–∞ "
                                               f"–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n"
                                               f"‚ú®Status Code UA Standard: unknown\n" \
                                               f"‚ú®Status Code UA Yandex Mobile: unknown\n" \
                                               f"‚ú®Status Code UA Google Mobile: unknown\n" \
                                               f"‚ú®Status Code UA Yandex PC: unknown\n" \
                                               f"üìÖ–î–∞—Ç–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è: unknown\n" \
                                               f"üìÖ–î–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–¥–∞ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞: unknown\n" \
                                               f"üìÖ–î–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ robots_txt: unknown\n" \
                                               f"üìÖ–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è robots_txt: unknown\n" \
                                               f"üë•–ö–æ–ª-–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–ª–µ–¥–∏—Ç –∑–∞ –¥–æ–º–µ–Ω–æ–º, —à—Ç.: unknown\n")
    except ValueError:
        bot.send_message(message.from_user.id, f"–£–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π id. –ù–∞–ø–∏—à–∏—Ç–µ /start –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É.")


def add_seconds_timedelta(message):
    if message.text == '–ù–∞–∑–∞–¥':
        get_text_messages(message)
    else:
        try:
            user_id = message.from_user.id
            select_interval_notification(user_id)
            seconds = int(message.text)
            update_interval_notification(user_id, seconds)
            print(seconds)
            bot.send_message(message.chat.id, f"‚úÖ –ò–Ω—Ç–µ—Ä–≤–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω.\n"
                                              f"–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ '–ù–∞–∑–∞–¥' –∏–ª–∏ /start")
        except ValueError:
            bot.send_message(message.chat.id, f"–í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ. "
                                              f"–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ '–ù–∞–∑–∞–¥' –∏–ª–∏ /start")


def add_site_bd(message):
    try:
        if message.text == '–ù–∞–∑–∞–¥':
            get_text_messages(message)
        else:
            user_id = message.from_user.id
            domain_name_telegram = message.text
            domain_name_telegram = str(domain_name_telegram).lower()
            print(f"USER ID: {user_id} –ø—ã—Ç–∞–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–º–µ–Ω {domain_name_telegram}")
            print(parse_domain_url(domain_name_telegram))
            if not parse_domain_url(domain_name_telegram):
                """
                –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª –¥–æ–º–µ–Ω –±–µ–∑ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞.
                """
                bot.send_message(message.from_user.id,
                                 f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ–º–µ–Ω–∞.\n"
                                 f"–ü—Ä–∏—á–∏–Ω–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–æ—Ç–æ–∫–æ–ª http/https\n"
                                 f"–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ /start –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥'")
            else:
                print(type(parse_domain_url(domain_name_telegram)))
                db = MySQLi(host, user, password, database_home)
                check_id_domain = db.fetch("SELECT id_domain FROM domains WHERE domain LIKE CONCAT('%', %s, '%')",
                                           parse_domain_url(domain_name_telegram))
                print(check_id_domain)
                if not check_id_domain['rows']:  # –µ—Å–ª–∏ –≤ –ë–î –Ω–µ—Ç –¥–æ–º–µ–Ω–∞
                    print("–î–æ–º–µ–Ω–∞ –Ω–µ—Ç –≤ –ë–î")
                    bot.send_message(message.from_user.id,
                                     f"üïí –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ.\nüëÆ –ü—Ä–æ–≤–æ–¥–∏–º –ø–µ—Ä–≤–∏—á–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –¥–æ–º–µ–Ω–∞.")

                    status = check_domain(domain_name_telegram, standard_headers_list)

                    if status != 200:
                        """
                        –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –¥–æ–º–µ–Ω–∞ –Ω–µ —Ä–∞–≤–µ–Ω 200 –û–ö. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —é–∑–µ—Ä—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.
                        """
                        bot.send_message(message.from_user.id,
                                         f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ–º–µ–Ω–∞: {domain_name_telegram}\n"
                                         f"–ü—Ä–∏—á–∏–Ω–∞: –∫–æ–¥ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ {status['code']}\n"
                                         f"üí° –î–æ–±–∞–≤–ª—è–µ–º—ã–π –¥–æ–º–µ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ "
                                         f"–∏ –∏–º–µ—Ç—å –∫–æ–¥ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ 200 –û–ö.\n"
                                         f"–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ /start –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥'")
                    else:
                        """
                        –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ = 200 –û–ö. –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–º–µ–Ω –≤ –ë–î –∏ —Å–≤—è–∑—ã–≤–∞–µ–º —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
                        """
                        db.commit("INSERT INTO domains (domain) VALUES (%s)", domain_name_telegram)
                        check_id_domain = db.fetch(
                            "SELECT id_domain FROM domains WHERE domain LIKE CONCAT('%', %s, '%')",
                            parse_domain_url(domain_name_telegram))
                        print(check_id_domain)
                        id_domain = (check_id_domain['rows'][0][0])
                        print(id_domain)
                        db.commit("INSERT INTO users (name, domain_id, telegram_id) VALUES (%s, %s, %s)",
                                  message.from_user.username, id_domain, user_id)
                        bot.send_message(message.from_user.id,
                                         f"üåê –î–æ–º–µ–Ω: {domain_name_telegram}\n"
                                         f"‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö\n"
                                         f"–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ /start –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥'")
                else:
                    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–≤—è–∑–∫–∏ –¥–æ–º–µ–Ω–∞ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
                    """
                    –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–≤—è–∑–∫—É –¥–æ–º–µ–Ω–∞ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤ –ë–î.
                    """
                    telegram_users_id = db.fetch("SELECT telegram_id FROM users WHERE domain_id = %s",
                                                 check_id_domain['rows'][0][0])
                    if len(telegram_users_id['rows']) == 0:
                        id_domain = (check_id_domain['rows'][0][0])
                        db.commit("INSERT INTO users (name, domain_id, telegram_id) VALUES (%s, %s, %s)",
                                  message.from_user.username, id_domain, user_id)
                        bot.send_message(message.from_user.id,
                                         f"üåê –î–æ–º–µ–Ω: {domain_name_telegram}\n"
                                         f"‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö\n"
                                         f"–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ /start –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥'")
                    else:
                        if user_id in telegram_users_id['rows'][0]:
                            bot.send_message(message.from_user.id,
                                             f"üåê –î–æ–º–µ–Ω: {domain_name_telegram} —É–∂–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è.\n"
                                             f"–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ /start –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥'")
                        else:
                            id_domain = (check_id_domain['rows'][0][0])
                            db.commit("INSERT INTO users (name, domain_id, telegram_id) VALUES (%s, %s, %s)",
                                      message.from_user.username, id_domain, user_id)
                            bot.send_message(message.from_user.id,
                                             f"üåê –î–æ–º–µ–Ω: {domain_name_telegram}\n"
                                             f"‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö\n"
                                             f"–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ /start –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥'")

    except ValueError:
        bot.send_message(message.from_user.id, f"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ–º–µ–Ω–∞. –ù–∞–ø–∏—à–∏—Ç–µ /start")
    except TypeError:
        bot.send_message(message.from_user.id, f"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ–º–µ–Ω–∞. –ù–∞–ø–∏—à–∏—Ç–µ /start")


def delete_site_bd(message):
    try:
        if message.text == '–ù–∞–∑–∞–¥':
            get_text_messages(message)
        else:
            domain_id = message.text
            user_id = message.from_user.id
            db = MySQLi(host, user, password, database_home)
            check_delete = db.fetch("SELECT domain_id FROM users WHERE telegram_id = %s AND id_user = %s", user_id,
                                    domain_id)
            if len(check_delete['rows']) >= 1:
                db.commit("DELETE FROM users WHERE telegram_id = %s AND id_user = %s", user_id, domain_id)
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞—è–≤–∫—É –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –¥–æ–º–µ–Ω–∞ {domain_id} –∏–∑ –ë–î")
                check_delete = db.fetch("SELECT domain_id FROM users WHERE telegram_id = %s AND domain_id = %s",
                                        user_id, domain_id)
                if int(len(check_delete['rows'])) == 0:
                    bot.send_message(message.from_user.id, f"–î–æ–º–µ–Ω —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å /start")
                else:
                    bot.send_message(message.from_user.id,
                                     f"–£–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π id. –ù–∞–ø–∏—à–∏—Ç–µ /start –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É")
            else:
                bot.send_message(message.from_user.id, f"–£–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π id. –ù–∞–ø–∏—à–∏—Ç–µ /start –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É")
    except ValueError:
        bot.send_message(message.from_user.id, f"–£–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π id. –ù–∞–ø–∏—à–∏—Ç–µ /start –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É")


def add_telephone(message):
    try:
        if message.text == '–ù–∞–∑–∞–¥':
            get_text_messages(message)
        else:
            user_id = message.from_user.id
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø—ã—Ç–∞–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
            status_number = correctly_telephone(message.text)
            print(status_number)
            if status_number == 'Error':
                bot.send_message(message.from_user.id, f"–£–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n"
                                                       f"–ù–∞–ø–∏—à–∏—Ç–µ /start –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É")
            elif status_number == 'Success':
                telephone = message.text
                print(telephone)
                bot.send_message(message.from_user.id, f"–í–∞—à –æ–ø–µ—Ä–∞—Ç–æ—Ä:\n"
                                                       f"/Tele2\n"
                                                       f"\n"
                                                       f"/MTS\n"
                                                       f"\n"
                                                       f"/Yota\n"
                                                       f"\n"
                                                       f"/Megafon\n"
                                                       f"\n"
                                                       f"/Beeline")
                insert_telephone(message.text, user_id)
                bot.register_next_step_handler(message, id_operator)

    except ValueError:
        bot.send_message(message.from_user.id, f"–£–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä. –ù–∞–ø–∏—à–∏—Ç–µ /start –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É")


def id_operator(message):
    try:
        if message.text == '–ù–∞–∑–∞–¥':
            get_text_messages(message)
        else:
            user_id = message.from_user.id
            if message.text == '/Tele2':
                update_mobile_operator(user_id, "Tele2")
                bot.send_message(message.from_user.id, f"–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ /start")
            elif message.text == '/MTS':
                update_mobile_operator(user_id, "MTS")
                bot.send_message(message.from_user.id, f"–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞ MTS –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ /start –∏"
                                                       f" –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –¥—Ä—É–≥–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞.")
            elif message.text == '/Yota':
                update_mobile_operator(user_id, "Yota")
                bot.send_message(message.from_user.id, f"–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ /start")
            elif message.text == '/Megafon':
                update_mobile_operator(user_id, "Megafon")
                bot.send_message(message.from_user.id, f"–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ /start")
            elif message.text == '/Beeline':
                update_mobile_operator(user_id, "Beeline")
                bot.send_message(message.from_user.id, f"–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ /start")
            else:
                print("–û—à–∏–±–∫–∞ —É–∫–∞–∑–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞")
                bot.send_message(message.from_user.id, f"–£–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –º–æ–±. –æ–ø–µ—Ä–∞—Ç–æ—Ä. "
                                                       f"–ù–∞–ø–∏—à–∏—Ç–µ /start –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É")

    except ValueError:
        bot.send_message(message.from_user.id, f"–£–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π id. –ù–∞–ø–∏—à–∏—Ç–µ /start –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É")


def main():
    com = 'pgrep -f telegram.py'
    p = subprocess.Popen([com], stdout=subprocess.PIPE, shell=True)
    res = p.communicate()[0]
    if isinstance(res, bytes):
        res = res.decode("utf-8")
    res = [str(x) for x in res.split('\n') if len(x) > 0]
    print('–û–∂–∏–¥–∞–µ–º 10 —Å–µ–∫—É–Ω–¥')
    time.sleep(10)
    if len(res) >= 4:
        print('–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å–∫ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.')
    else:
        try:
            bot.polling(none_stop=True, interval=2)
        except Exception as err:
            logging.error(err)
            time.sleep(5)
            print("Internet error!")


if __name__ == '__main__':
    main()

#
